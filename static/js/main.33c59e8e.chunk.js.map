{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","console","log","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAiBeA,EAfF,SAACC,GAEb,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,gCAA2BH,EAAMI,GAAjC,cACrB,gCACC,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,e,4BCcCC,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACD,cAAC,EAAD,CAEDP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHVK,SCKEC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKb,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVc,KAAK,SACLC,YAAY,cACZC,SAAUH,OCECI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAS,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAxE,SACEtB,EAAMuB,YCkDKC,G,wDA/Cd,aAAc,IAAD,8BACZ,gBAeDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACd,YAAaa,EAAME,OAAOC,SAfzC,EAAKC,MAAM,CACVtB,OAAQ,GACRK,YAAa,IAEdkB,QAAQC,IAAI,eANA,E,qDASb,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKV,SAAS,CAAEnB,OAAQ6B,OACvCN,QAAQC,IAAI,uB,oBAOb,WAAS,IAAD,OACPD,QAAQC,IAAI,UACZ,IAAMM,EAAiBC,KAAKT,MAAMtB,OAAOgC,QAAO,SAAAhC,GAChD,OAAOA,EAAOH,KAAKoC,cAAcC,SAAS,EAAKZ,MAAMjB,YAAY4B,kBAEjE,OAAgC,IAA7BF,KAAKT,MAAMtB,OAAOmC,OACb,iDAIL,sBAAK1C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,uBACA,cAAC,EAAD,CAAWa,aAAcyB,KAAKd,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ8B,a,GApCPM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33c59e8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br5 pa10 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/ ${props.id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t<p>{props.email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t);\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t  \t\t{\r\n\t  \t\t\trobots.map((user, i) => {\r\n\t\t      return (\r\n\t\t\t    <Card \r\n\t\t\t\t  key = {i} \r\n\t\t\t\t  id={robots[i].id} \r\n\t\t\t\t  name={robots[i].name} \r\n\t\t\t\t  email={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t})\r\n\r\n\t  \t\t}\r\n\t  \t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 bc b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search here'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style = {{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t\tconsole.log(\"constructor\");\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users=> this.setState({ robots: users}))\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t}\r\n\t\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t}\r\n\r\n\trender(){\r\n\t\tconsole.log(\"render\")\r\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\r\n\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length === 0)\r\n\t\t\treturn <h1>wait for it....</h1>\r\n\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className='f1'>MovieBots</h1>\r\n\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t}\r\n\t\t\r\n\t\t\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Card from './Card';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}